{
	"name": "Dataflow2",
	"properties": {
		"folder": {
			"name": "DataFlowNotInUse"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TestADFDataset",
						"type": "DatasetReference"
					},
					"name": "SourceRawCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TestADFCleanedCSV",
						"type": "DatasetReference"
					},
					"name": "CleanedCSVSink"
				}
			],
			"transformations": [],
			"scriptLines": [
				"parameters{",
				"     toDate as string,",
				"     fromDate as string",
				"}",
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string,",
				"          Column_29 as string,",
				"          Column_30 as string,",
				"          Column_31 as string,",
				"          Column_32 as string,",
				"          Column_33 as string,",
				"          Column_34 as string,",
				"          Column_35 as string,",
				"          Column_36 as string,",
				"          Column_37 as string,",
				"          Column_38 as string,",
				"          Column_39 as string,",
				"          Column_40 as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     skipLines: 2,",
				"     dateFormats: ['yyyy-MM-dd'],",
				"     preferredFractionalType: 'double') ~> SourceRawCSV",
				"SourceRawCSV sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          AccountId as string,",
				"          AccountName as string,",
				"          AccountOwnerEmail as string,",
				"          AdditionalInfo as string,",
				"          ConsumedQuantity as string,",
				"          ConsumedService as string,",
				"          ConsumedServiceId as string,",
				"          Cost as string,",
				"          CostCenter as string,",
				"          Date as string,",
				"          DepartmentId as string,",
				"          DepartmentName as string,",
				"          InstanceId as string,",
				"          MeterCategory as string,",
				"          MeterId as string,",
				"          MeterName as string,",
				"          MeterRegion as string,",
				"          MeterSubCategory as string,",
				"          Product as string,",
				"          ProductId as string,",
				"          ResourceGroup as string,",
				"          ResourceLocation as string,",
				"          ResourceLocationId as string,",
				"          ResourceRate as string,",
				"          ServiceAdministratorId as string,",
				"          ServiceInfo1 as string,",
				"          ServiceInfo2 as string,",
				"          StoreServiceIdentifier as string,",
				"          SubscriptionGuid as string,",
				"          SubscriptionId as string,",
				"          SubscriptionName as string,",
				"          Tags as string,",
				"          UnitOfMeasure as string,",
				"          PartNumber as string,",
				"          ResourceGuid as string,",
				"          OfferId as string,",
				"          ChargesBilledSeparately as string,",
				"          Location as string,",
				"          ServiceName as string,",
				"          ServiceTier as string",
				"     ),",
				"     partitionFileNames:[(concat($fromDate,'-',$toDate,'-cleaned.csv'))],",
				"     umask: 0666,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> CleanedCSVSink"
			]
		}
	}
}