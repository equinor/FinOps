{
	"name": "Daily Cleanup",
	"properties": {
		"activities": [
			{
				"name": "Get Actual Cost folders modied more than 1 day ago",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Delete Actual Cost Files modified more than 1 day ago",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Older_Files_For_Deletion_Binary",
						"type": "DatasetReference",
						"parameters": {
							"ReportType": {
								"value": "@variables('ActualCost')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"modifiedDatetimeEnd": {
							"value": "@addHours(utcnow(),-12)",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "For Each AC Folder",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Actual Cost folders modied more than 1 day ago",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Actual Cost folders modied more than 1 day ago').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get AC Item Metadata",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_Test_delete_file",
									"type": "DatasetReference",
									"parameters": {
										"Path": {
											"value": "@item().name",
											"type": "Expression"
										},
										"ReportType": {
											"value": "@variables('ActualCost')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If AC Folder Empty",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get AC Item Metadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@empty(activity('Get AC Item Metadata').output.childItems)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Delete Empty AC Folder",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "ds_Test_delete_file",
												"type": "DatasetReference",
												"parameters": {
													"Path": {
														"value": "@item().name",
														"type": "Expression"
													},
													"ReportType": {
														"value": "@variables('ActualCost')",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Delete Actual Cost Files modified more than 1 day ago",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Set Date Range",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_test_delete_files",
						"type": "DatasetReference",
						"parameters": {
							"ReportType": {
								"value": "@variables('ActualCost')",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"modifiedDatetimeEnd": {
							"value": "@addHours(utcnow(),-12)",
							"type": "Expression"
						},
						"wildcardFileName": "*",
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Get Amortized Cost folders modied more than 1 day ago",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Delete Amortized Cost Files modfied more than 1 day ago",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Older_Files_For_Deletion_Binary",
						"type": "DatasetReference",
						"parameters": {
							"ReportType": {
								"value": "@variables('AmortizedCost')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"modifiedDatetimeEnd": {
							"value": "@addHours(utcnow(),-12)",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "For Amortized Folder",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Amortized Cost folders modied more than 1 day ago",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Amortized Cost folders modied more than 1 day ago').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get Amortized Item Metadata",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_Test_delete_file",
									"type": "DatasetReference",
									"parameters": {
										"Path": {
											"value": "@item().name",
											"type": "Expression"
										},
										"ReportType": {
											"value": "@variables('AmortizedCost')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If Amortized Folder Empty",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Amortized Item Metadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@empty(activity('Get Amortized Item Metadata').output.childItems)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Delete Empty Amortized Folder",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "ds_Test_delete_file",
												"type": "DatasetReference",
												"parameters": {
													"Path": {
														"value": "@item().name",
														"type": "Expression"
													},
													"ReportType": {
														"value": "@variables('AmortizedCost')",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Delete Amortized Cost Files modfied more than 1 day ago",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Set Date Range",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_test_delete_files",
						"type": "DatasetReference",
						"parameters": {
							"ReportType": {
								"value": "@variables('AmortizedCost')",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"modifiedDatetimeEnd": {
							"value": "@addHours(utcnow(),-12)",
							"type": "Expression"
						},
						"wildcardFileName": "*",
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Create Actual Cost Parquet File",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "For Each AC Folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": "exports/daily/ACMDailyActualCost/*",
							"wildcardFileName": "*.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "InvoiceSectionName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "InvoiceSectionName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AccountName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AccountOwnerId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountOwnerId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubscriptionId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubscriptionName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceGroup",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceGroup",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceLocation",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceLocation",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Date",
									"type": "DateTime",
									"physicalType": "String"
								},
								"sink": {
									"name": "Date",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterCategory",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterCategory",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterSubCategory",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterSubCategory",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterRegion",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterRegion",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "UnitOfMeasure",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "UnitOfMeasure",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Quantity",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "Quantity",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "EffectivePrice",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "EffectivePrice",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "CostInBillingCurrency",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "CostInBillingCurrency",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "CostCenter",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CostCenter",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ConsumedService",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ConsumedService",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Tags",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Tags",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "OfferId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "OfferId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AdditionalInfo",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AdditionalInfo",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceInfo1",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceInfo1",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceInfo2",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceInfo2",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ReservationId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ReservationId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ReservationName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ReservationName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "UnitPrice",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "UnitPrice",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ProductOrderId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ProductOrderId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ProductOrderName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ProductOrderName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Term",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Term",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PublisherType",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PublisherType",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PublisherName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PublisherName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ChargeType",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ChargeType",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Frequency",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Frequency",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PricingModel",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PricingModel",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AvailabilityZone",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AvailabilityZone",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingAccountId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingAccountId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingAccountName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingAccountName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingCurrencyCode",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingCurrencyCode",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingPeriodStartDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingPeriodStartDate",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingPeriodEndDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingPeriodEndDate",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingProfileId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingProfileId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingProfileName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingProfileName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "InvoiceSectionId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "InvoiceSectionId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "IsAzureCreditEligible",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "IsAzureCreditEligible",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PartNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PartNumber",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PayGPrice",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "PayGPrice",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PlanName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PlanName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceFamily",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceFamily",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "CostAllocationRuleName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CostAllocationRuleName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "benefitId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "benefitId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "benefitName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "benefitName",
									"type": "String",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_CSV_File",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_Daily_Parquet_File",
						"type": "DatasetReference",
						"parameters": {
							"Path": {
								"value": "@concat('exports/daily/ACMDaily',variables('ActualCost'))",
								"type": "Expression"
							},
							"reportType": {
								"value": "@variables('ActualCost')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set last day in Month",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set first day of month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "toDate",
					"value": {
						"value": "@replace(adddays(formatDateTime(adddays(formatDateTime(variables('fromDate'), 'yyyy-MM-28'),5), 'yyyy-MM-01'),-1),'T00:00:00.0000000','')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set first day of month",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "fromDate",
					"value": {
						"value": "@concat(formatDateTime(utcnow(),'yyyy-MM-01'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Date Range",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set last day in Month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "dateRange",
					"value": {
						"value": "@concat(replace(variables('fromDate'),'-',''),'-',replace(variables('toDate'),'-',''))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Create Amortized Cost Parquet File",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "For Amortized Folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": "exports/daily/ACMDailyAmortizedCost/*",
							"wildcardFileName": "*.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "InvoiceSectionName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "InvoiceSectionName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AccountName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AccountOwnerId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountOwnerId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubscriptionId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubscriptionName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceGroup",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceGroup",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceLocation",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceLocation",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Date",
									"type": "DateTime",
									"physicalType": "String"
								},
								"sink": {
									"name": "Date",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterCategory",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterCategory",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterSubCategory",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterSubCategory",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterRegion",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterRegion",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "UnitOfMeasure",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "UnitOfMeasure",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Quantity",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "Quantity",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "EffectivePrice",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "EffectivePrice",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "CostInBillingCurrency",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "CostInBillingCurrency",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "CostCenter",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CostCenter",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ConsumedService",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ConsumedService",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Tags",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Tags",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "OfferId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "OfferId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AdditionalInfo",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AdditionalInfo",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceInfo1",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceInfo1",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceInfo2",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceInfo2",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ReservationId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ReservationId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ReservationName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ReservationName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "UnitPrice",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "UnitPrice",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ProductOrderId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ProductOrderId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ProductOrderName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ProductOrderName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Term",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Term",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PublisherType",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PublisherType",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PublisherName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PublisherName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ChargeType",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ChargeType",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Frequency",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Frequency",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PricingModel",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PricingModel",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AvailabilityZone",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AvailabilityZone",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingAccountId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingAccountId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingAccountName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingAccountName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingCurrencyCode",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingCurrencyCode",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingPeriodStartDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingPeriodStartDate",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingPeriodEndDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingPeriodEndDate",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingProfileId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingProfileId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "BillingProfileName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "BillingProfileName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "InvoiceSectionId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "InvoiceSectionId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "IsAzureCreditEligible",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "IsAzureCreditEligible",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PartNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PartNumber",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PayGPrice",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "PayGPrice",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PlanName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PlanName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceFamily",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceFamily",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "CostAllocationRuleName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CostAllocationRuleName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "benefitId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "benefitId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "benefitName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "benefitName",
									"type": "String",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_CSV_File",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_Daily_Parquet_File",
						"type": "DatasetReference",
						"parameters": {
							"Path": {
								"value": "@concat('exports/daily/ACMDaily',variables('AmortizedCost'))",
								"type": "Expression"
							},
							"reportType": {
								"value": "@variables('AmortizedCost')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "If today is the 1st of the Month",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Create Actual Cost Parquet File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(dayOfMonth(utcnow()),1)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Get last day of previous month",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get first day of previous month",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "toDate",
								"value": {
									"value": "@concat(formatDateTime(addDays(utcnow(), -1),'yyyyMMdd'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Get first day of previous month",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "fromDate",
								"value": {
									"value": "@concat(formatDateTime(addDays(utcnow(), -1),'yyyyMM01'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy daily file to Monthly folder",
							"description": "Copy daily file to monthly folder as it is 1st of the month. This places a file in the monthly folder so the union SQL queries will work. This file will be overwritten when Microsoft pushes the official monthly file on the 5th of every month.",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Get last day of previous month",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_Daily_Parquet_File",
									"type": "DatasetReference",
									"parameters": {
										"Path": {
											"value": "@concat('exports/daily/ACMDaily',variables('ActualCost'))",
											"type": "Expression"
										},
										"reportType": {
											"value": "@variables('ActualCost')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Monthly_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"Path": {
											"value": "@concat('exports/monthly/ACMMonthlyActualCost/',variables('fromDate'),'-',variables('toDate'))",
											"type": "Expression"
										},
										"Container": "usage",
										"toDate_fromDate": {
											"value": "@concat(variables('fromDate'),'-',variables('toDate'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "runNotebook Daily Extend AI column and WBS tags_v1",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "If today is the 1st of the Month",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Create Amortized Cost Parquet File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Daily Extend AI column and WBS tags_v1",
						"type": "NotebookReference"
					},
					"parameters": {
						"toDate": {
							"value": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"type": "string"
						},
						"fromDate": {
							"value": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "sprkpool33large",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Medium",
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": "Medium",
					"numExecutors": null
				}
			},
			{
				"name": "runNotebook AnomalyDetection_v1",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "runNotebook Daily Extend AI column and WBS tags_v1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Anomaly_Detection_v1",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "sparkpool32",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"driverSize": "Small"
				}
			}
		],
		"variables": {
			"ActualCost": {
				"type": "String",
				"defaultValue": "ActualCost"
			},
			"AmortizedCost": {
				"type": "String",
				"defaultValue": "AmortizedCost"
			},
			"fromDate": {
				"type": "String"
			},
			"toDate": {
				"type": "String"
			},
			"dateRange": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Management API (New)"
		},
		"annotations": [],
		"lastPublishTime": "2023-02-01T10:07:38Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}