{
	"name": "Get Monthly Usage",
	"properties": {
		"activities": [
			{
				"name": "Get Bearer",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://acm-toolkit-kv.vault.azure.net/secrets/EA-API-PRI-KEY/d222708c46d54a0abd273cc0877b6aad?api-version=7.0",
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Post Consumption Request",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set last day in Month",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Bearer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://consumption.azure.com/v3/enrollments/57950773/usagedetails/submit?startTime=',variables('fromDate'),'&endTime=',variables('toDate'))",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"method": "POST",
					"headers": {
						"Authorization": {
							"value": "@{concat('Bearer ',activity('Get Bearer').output.value)}",
							"type": "Expression"
						}
					},
					"body": "{}"
				}
			},
			{
				"name": "Until Data Ready",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Post Consumption Request",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(not(empty(activity('Check Status').output.blobPath)))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Check Status",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@activity('Post Consumption Request').output.reportUrl",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "AutoResolveIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								},
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "@{concat('Bearer ',activity('Get Bearer').output.value)}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Waiting for Data",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "Check Status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 10
							}
						}
					],
					"timeout": "0.01:00:00"
				}
			},
			{
				"name": "Set blobPath",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Until Data Ready",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "blobPath",
					"value": {
						"value": "@activity('Check Status').output.blobPath",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy file from MS to Synapse datastore",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set blobPath",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 10,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET",
							"requestTimeout": ""
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ms_billing_output_file",
						"type": "DatasetReference",
						"parameters": {
							"blobPath": {
								"value": "@variables('blobPath')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "S037_Usage_DataSet",
						"type": "DatasetReference",
						"parameters": {
							"fromDate": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							},
							"toDate": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"Scope": {
								"value": "@variables('Scope')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set last day in Month",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set first day of month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "toDate",
					"value": {
						"value": "@replace(adddays(formatDateTime(adddays(formatDateTime(variables('fromDate'), 'yyyy-MM-28'),5), 'yyyy-MM-01'),-1),'T00:00:00.0000000','')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set first day of month",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set Year",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "fromDate",
					"value": {
						"value": "@concat(variables('Year'),'-',variables('Month'),'-01')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CSV to Parquet remove first 2 rows",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy file from MS to Synapse datastore",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": {
								"value": "@concat(if(equals(variables('Scope'),'monthly'),concat('monthly/',variables('Year'),'/',variables('Month')),'daily'))",
								"type": "Expression"
							},
							"wildcardFileName": "*-raw.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings",
							"skipLineCount": 1
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AccountId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AccountName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AccountOwnerEmail",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountOwnerEmail",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "AdditionalInfo",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AdditionalInfo",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ConsumedQuantity",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "ConsumedQuantity",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ConsumedService",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ConsumedService",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ConsumedServiceId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ConsumedServiceId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Cost",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "Cost",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "CostCenter",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CostCenter",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Date",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "DepartmentId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "DepartmentId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "DepartmentName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "DepartmentName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "InstanceId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "InstanceId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterCategory",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterCategory",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterRegion",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterRegion",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "MeterSubCategory",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MeterSubCategory",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Product",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Product",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ProductId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ProductId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceGroup",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceGroup",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceLocation",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceLocation",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceLocationId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceLocationId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceRate",
									"type": "Double",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceRate",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceAdministratorId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceAdministratorId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceInfo1",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceInfo1",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceInfo2",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceInfo2",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "StoreServiceIdentifier",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "StoreServiceIdentifier",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubscriptionGuid",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionGuid",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubscriptionId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubscriptionName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Tags",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Tags",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "UnitOfMeasure",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "UnitOfMeasure",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "PartNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PartNumber",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ResourceGuid",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ResourceGuid",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "OfferId",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "OfferId",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ChargesBilledSeparately",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ChargesBilledSeparately",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Location",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Location",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ServiceTier",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceTier",
									"type": "String",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "S037CSVSourceDataset",
						"type": "DatasetReference",
						"parameters": {
							"Year": {
								"value": "@variables('Year')",
								"type": "Expression"
							},
							"Month": {
								"value": "@variables('Month')",
								"type": "Expression"
							},
							"toDate": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"scope": {
								"value": "@variables('Scope')",
								"type": "Expression"
							},
							"fromDate": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "S037Parquet",
						"type": "DatasetReference",
						"parameters": {
							"Year": {
								"value": "@variables('Year')",
								"type": "Expression"
							},
							"Month": {
								"value": "@variables('Month')",
								"type": "Expression"
							},
							"toDate": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"fromDate": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							},
							"Scope": {
								"value": "@variables('Scope')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Cleaned Parquet to CSV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CSV to Parquet remove first 2 rows",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "S037Parquet",
						"type": "DatasetReference",
						"parameters": {
							"Year": {
								"value": "@variables('Year')",
								"type": "Expression"
							},
							"Month": {
								"value": "@variables('Month')",
								"type": "Expression"
							},
							"toDate": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"fromDate": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							},
							"Scope": {
								"value": "@variables('Scope')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "S037_Cleaned_CSV_Dest",
						"type": "DatasetReference",
						"parameters": {
							"Year": {
								"value": "@variables('Year')",
								"type": "Expression"
							},
							"Month": {
								"value": "@variables('Month')",
								"type": "Expression"
							},
							"fromDate": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							},
							"toDate": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"Scope": {
								"value": "@variables('Scope')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set Month",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Month",
					"value": {
						"value": "@if(less(sub(int(formatdatetime(utcnow(),'MM')),11),0),concat('0',string(sub(int(formatdatetime(utcnow(),'MM')),1))),string(sub(int(formatdatetime(utcnow(),'MM')),1)))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Year",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Year",
					"value": {
						"value": "@if(equals(int(formatDateTime(utcNow(), 'MM')), 01), string(sub(int(formatDateTime(utcNow(), 'yyyy')),1)),string(int(formatDateTime(utcNow(), 'yyyy'))))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Delete Monthly Raw File",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Cleaned Parquet to CSV",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "S037_Usage_DataSet",
						"type": "DatasetReference",
						"parameters": {
							"fromDate": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							},
							"toDate": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"Scope": {
								"value": "@variables('Scope')",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": false,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Delete last months daily files",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Cleaned Parquet to CSV",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "S037_Usage_DataSet",
						"type": "DatasetReference",
						"parameters": {
							"fromDate": {
								"value": "@variables('fromDate')",
								"type": "Expression"
							},
							"toDate": {
								"value": "@variables('toDate')",
								"type": "Expression"
							},
							"Scope": {
								"value": "daily",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": false,
						"wildcardFileName": {
							"value": "@{concat(variables('Year'),'-',variables('Month'),'*')}",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"variables": {
			"blobPath": {
				"type": "String"
			},
			"toDate": {
				"type": "String"
			},
			"fromDate": {
				"type": "String"
			},
			"Month": {
				"type": "String"
			},
			"Year": {
				"type": "String"
			},
			"Scope": {
				"type": "String",
				"defaultValue": "monthly"
			}
		},
		"folder": {
			"name": "PipelinesNotInUse/Consumption API (Old)"
		},
		"annotations": [],
		"lastPublishTime": "2022-11-18T13:45:39Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}