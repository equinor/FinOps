{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool32",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "4e22f7ca-ccff-4884-88d4-027eae57a474"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/13d66f54-0a19-4912-b4f3-54d15897368d/resourceGroups/Synapse/providers/Microsoft.Synapse/workspaces/s037-cost-management/bigDataPools/sparkpool32",
				"name": "sparkpool32",
				"type": "Spark",
				"endpoint": "https://s037-cost-management.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool32",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"filePath = '/usage/daily/'\n",
					"fileName = '2022-08-16-raw.csv'"
				],
				"execution_count": 138
			},
			{
				"cell_type": "code",
				"metadata": {
					"tags": []
				},
				"source": [
					"from notebookutils import mssparkutils\n",
					"\n",
					"#mssparkutils.fs.unmount(\"/usage\") \n",
					"\n",
					"print('Mounting storage container \"usage@s037costmgmt.dfs.core.windows.net\" to \"/usage\"...')\n",
					"mssparkutils.fs.mount( \n",
					"    \"abfss://usage@s037costmgmt.dfs.core.windows.net\", \n",
					"    \"/usage\", \n",
					"    {\"linkedService\":\"s037-cost-management-WorkspaceDefaultStorage\"} \n",
					")\n",
					"\n",
					"#path = 'synfs:/'+str(mssparkutils.env.getJobId())+filePath+fileName\n",
					"#print(mssparkutils.fs.ls(path))\n",
					"\n",
					"path = '/synfs/'+str(mssparkutils.env.getJobId())+filePath+fileName\n",
					"\n",
					"def remove_first_two_lines_from_file(file):\n",
					"    new_file = file.replace('-raw.csv', '-cleaned.csv')\n",
					"    with open(file, \"r\") as f1:\n",
					"        print(f'Reading raw file ({file}) from line 3 onwards')\n",
					"        with open(new_file, \"w\") as f2:\n",
					"            content = f1.readlines()[2:]\n",
					"            print(f'Writing to cleaned file: {new_file}')\n",
					"            for line in content:\n",
					"                f2.write(line)\n",
					"    print(f'Closing raw file')\n",
					"    f1.close()\n",
					"    print(f'Closing cleaned file')\n",
					"    f2.close()\n",
					"\n",
					"#path = 'abfss://usage@s037costmgmt.dfs.core.windows.net' + filePath + fileName\n",
					"#print(f'Cleaning raw file: {path}')\n",
					"remove_first_two_lines_from_file(path)    \n",
					"\n",
					"print(f'Unmounting /usage mount')\n",
					"mssparkutils.fs.unmount(\"/usage\")"
				],
				"execution_count": 139
			}
		]
	}
}