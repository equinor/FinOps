{
	"name": "fetch-billing-periods",
	"properties": {
		"folder": {
			"name": "NotebookInProduction/Billing"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sprkpool33large",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "112g",
			"driverCores": 16,
			"executorMemory": "112g",
			"executorCores": 16,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "5",
				"spark.autotune.trackingId": "29014eee-6272-4a57-bf76-e350fb8b7164"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/13d66f54-0a19-4912-b4f3-54d15897368d/resourceGroups/Synapse/providers/Microsoft.Synapse/workspaces/s037-cost-management/bigDataPools/sprkpool33large",
				"name": "sprkpool33large",
				"type": "Spark",
				"endpoint": "https://s037-cost-management.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sprkpool33large",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 16,
				"memory": 112,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Script requires manual retrival of access token from David Flood"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import requests\n",
					"import datetime\n",
					"import pyspark.sql.types as T\n",
					"import pyspark.sql.functions as F"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"tags": [
						"parameters"
					]
				},
				"source": [
					"storageAccount = 's037costmgmt'"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"BASE_URL = \"https://management.azure.com/providers/Microsoft.Billing/\"\n",
					"BILLING_ACCOUNT_ID = \"57950773\""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def generate_billing_periods(initial_year, initial_month):\n",
					"    now = datetime.datetime.now()\n",
					"    current_year = now.year\n",
					"    current_month = now.month\n",
					"\n",
					"    billing_periods = []\n",
					"\n",
					"    # Loop through the years and months and add the dates to the list\n",
					"    for year in range(initial_year, current_year + 1):\n",
					"        start_month = 1 if year > initial_year else initial_month\n",
					"        end_month = current_month if year == current_year else 12\n",
					"        for month in range(start_month, end_month + 1):\n",
					"            date_str = f\"{year}{month:02}\"\n",
					"            billing_periods.append(date_str)\n",
					"\n",
					"    return billing_periods"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def fetch_billing_details(billing_account_id, billing_period, api_version, access_token):\n",
					"\n",
					"    # Build Azure management API billing endpoint\n",
					"    endpoint_url = BASE_URL\n",
					"    endpoint_url += f\"billingAccounts/{billing_account_id}/\"\n",
					"    endpoint_url += f\"billingPeriods/{billing_period}/providers/Microsoft.Consumption/balances?\"\n",
					"    endpoint_url += f\"api-version={api_version}\"\n",
					"\n",
					"    headers = {\n",
					"        'Authorization': 'Bearer ' + access_token\n",
					"    }\n",
					"\n",
					"    response = requests.get(endpoint_url, headers=headers)\n",
					"    result = response.json()\n",
					"    return result"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"access_token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ikg5bmo1QU9Tc3dNcGhnMVNGeDdqYVYtbEI5dyIsImtpZCI6Ikg5bmo1QU9Tc3dNcGhnMVNGeDdqYVYtbEI5dyJ9..KDA7uY2FJjH0rzEkv77vWFLIxzLhyXvp1DT_ZxSahWqF_KFk2JLpq_1RwFCSQDbtdT5VcILjcvA3A7CJ-TPEupctrvNCPVDTegK3j6CME6GYywydsuLpvp5a1HeHAm326e5roJmjHIjcM8Trcbjl4Di5oYupmhY14HGN0KU1vS0fueZuw8hp33I8YIqmGLBXDpHDeavu3KiGCcH8vM0ctd237oKvmxBwSfvtfjEPLNkbstGFU4N5OI055LuyoMUzyl1nFOhyG-FDE6TWwItnE9geoJD9cDqVWz8J2LtPnVjMU-nXLptddtgmjqWPxstVtxnTSEZ6lEDOo_CUHkV1sA\""
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"billing_periods = generate_billing_periods(2018, 5)\n",
					"\n",
					"schema = T.StructType([\n",
					"    T.StructField(\"Id\", T.StringType(), True),\n",
					"    T.StructField(\"BillingPeriod\", T.StringType(), True),\n",
					"    T.StructField(\"BillingAccountId\", T.StringType(), True),\n",
					"    T.StructField(\"Currency\", T.StringType(), True),\n",
					"    T.StructField(\"BeginningBalance\", T.DoubleType(), True),\n",
					"    T.StructField(\"EndingBalance\", T.DoubleType(), True),\n",
					"    T.StructField(\"NewPurchases\", T.DoubleType(), True),\n",
					"    T.StructField(\"Adjustments\", T.DoubleType(), True),\n",
					"    T.StructField(\"Utilized\", T.DoubleType(), True),\n",
					"    T.StructField(\"ServiceOverage\", T.DoubleType(), True),\n",
					"    T.StructField(\"ChargesBilledSeparately\", T.DoubleType(), True),\n",
					"    T.StructField(\"TotalOverage\", T.DoubleType(), True),\n",
					"    T.StructField(\"TotalUsage\", T.DoubleType(), True),\n",
					"    T.StructField(\"AzureMarketplaceServiceCharges\", T.DoubleType(), True),\n",
					"    T.StructField(\"BillingFrequency\", T.StringType(), True),\n",
					"    T.StructField(\"PriceHidden\", T.BooleanType(), True)\n",
					"])\n",
					"df = spark.createDataFrame([], schema)\n",
					"\n",
					"for billing_period in billing_periods:\n",
					"    print(f'Fetching billing period {billing_period}')\n",
					"\n",
					"    data = fetch_billing_details(BILLING_ACCOUNT_ID, billing_period, '2019-10-01', access_token)\n",
					"\n",
					"    new_row = [(\n",
					"        data['id'],\n",
					"        billing_period,\n",
					"        BILLING_ACCOUNT_ID,\n",
					"        data['properties']['currency'],\n",
					"        data['properties']['beginningBalance'],\n",
					"        data['properties']['endingBalance'],\n",
					"        data['properties']['newPurchases'],\n",
					"        data['properties']['adjustments'],\n",
					"        data['properties']['utilized'],\n",
					"        data['properties']['serviceOverage'],\n",
					"        data['properties']['chargesBilledSeparately'],\n",
					"        data['properties']['totalOverage'],\n",
					"        data['properties']['totalUsage'],\n",
					"        data['properties']['azureMarketplaceServiceCharges'],\n",
					"        data['properties']['billingFrequency'],\n",
					"        data['properties']['priceHidden']\n",
					"    )]\n",
					"    new_df = spark.createDataFrame(new_row, schema)\n",
					"\n",
					"    df = df.union(new_df)"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"target_path = f\"abfss://usage@{storageAccount}.dfs.core.windows.net/billing/BillingPeriods.parquet\"\n",
					"df.write.format('parquet').mode('overwrite').save(target_path)"
				],
				"execution_count": 9
			}
		]
	}
}